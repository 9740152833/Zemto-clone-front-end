[{"E:\\Edurek Intership\\React Js\\zomto-clone\\src\\index.js":"1","E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\Router.js":"2","E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\Home.js":"3","E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\Details.js":"4","E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\Filter.js":"5","E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\Wallpaper.js":"6","E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\QuickSearch.js":"7","E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\QuickSearchItem.js":"8","E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\Navbar.js":"9"},{"size":239,"mtime":1608321841967,"results":"10","hashOfConfig":"11"},{"size":533,"mtime":1609141891320,"results":"12","hashOfConfig":"11"},{"size":1258,"mtime":1610821536352,"results":"13","hashOfConfig":"11"},{"size":20764,"mtime":1611320239406,"results":"14","hashOfConfig":"11"},{"size":15117,"mtime":1610084323331,"results":"15","hashOfConfig":"11"},{"size":3619,"mtime":1609607972956,"results":"16","hashOfConfig":"11"},{"size":1086,"mtime":1608874559403,"results":"17","hashOfConfig":"11"},{"size":1351,"mtime":1608979941259,"results":"18","hashOfConfig":"11"},{"size":10570,"mtime":1610120677545,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1nuv9te",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"E:\\Edurek Intership\\React Js\\zomto-clone\\src\\index.js",[],["45","46"],"E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\Router.js",[],"E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\Home.js",[],"E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\Details.js",["47","48","49","50","51","52","53","54","55"],"import React, { useState } from 'react';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport '../Styles/Details.css';\r\nimport Rating from 'react-rating'\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\n\r\n\r\nclass Details extends React.Component {\r\n\r\n\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.cartitemarray = [];\r\n        this.state = {\r\n            restaurants: [],\r\n            addcartitem: [],\r\n            userselectitem:[],\r\n            restaurant_id: undefined,\r\n            itemModalIsOpen: false,\r\n            handlecartopen: false,\r\n            formModalIsOpen: false,\r\n            galleryModalIsOpen: false,\r\n            locationModalIsOpen: false,\r\n            subTotal: 0,\r\n            name: '',\r\n            contactNumber: '',\r\n            address: '',\r\n            email: ''\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        center: {\r\n            lat: 59.95,\r\n            lng: 30.33\r\n        },\r\n        zoom: 11\r\n    };\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        const queryParams = queryString.parse(this.props.location.search);\r\n        const restaurant_id = queryParams.restaurant;\r\n        console.log(restaurant_id);\r\n\r\n\r\n\r\n\r\n\r\n        // Filter API Call \r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: `http://localhost:8900/restaurant/${restaurant_id}`,\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }).then(response => {\r\n            this.setState({ restaurants: response.data.restaurant, restaurant_id: restaurant_id })\r\n            console.log(response);\r\n        }).catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    handleOrder = () => {\r\n        const { restaurant_id } = this.state;\r\n        console.log(\"hello\");\r\n        axios({\r\n            method: 'GET',\r\n            url: `http://localhost:8900/restaurant/${restaurant_id}`,\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(response => {\r\n            this.setState({ items: response.data.restaurant, itemModalIsOpen: true })\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    handleModalClose = (state) => {\r\n        this.setState({ [state]: false });\r\n    }\r\n\r\n\r\n\r\n    addItems = (index, operationType) => {\r\n        let total = 0;\r\n        const items = [...this.state.restaurants.itemList];\r\n        console.log(items);\r\n        const item = items[index];\r\n\r\n\r\n\r\n        if (operationType == 'add') {\r\n\r\n            item.qty = item.qty + 1;\r\n        }\r\n        else {\r\n            item.qty = item.qty - 1;\r\n        }\r\n        items[index] = item;\r\n        items.map((item) => {\r\n            total += item.qty * item.rate;\r\n        })\r\n        const filter = items.filter(item => item.qty > 0);\r\n        this.setState({ items: items, subTotal: total,userselectitem:filter});\r\n       \r\n        \r\n\r\n    }\r\n\r\n    handlePay = () => {\r\n        this.setState({ itemModalIsOpen: false, formModalIsOpen: true })\r\n    }\r\n\r\n    handlecart = (index) => {\r\n        const items = [...this.state.restaurants.itemList];\r\n        const item = items[index];\r\n        this.cartitemarray.push(item);\r\n        this.setState({ handlecartopen: true, itemModalIsOpen: false, addcartitem: this.cartitemarray })\r\n\r\n    }\r\n\r\n    handleremovecart = (index) => {\r\n        const { addcartitem } = this.state;\r\n        const items2 = [...addcartitem];\r\n        items2.splice(index, 1);\r\n        this.setState({ addcartitem: items2 })\r\n        console.log(addcartitem);\r\n\r\n    }\r\n\r\n    handlebuynow = () => {\r\n        this.setState({ itemModalIsOpen: true, handlecartopen: false })\r\n    }\r\n\r\n    handleChange = (event, state) => {\r\n        this.setState({ [state]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        const { name, contactNumber, address, email } = this.state;\r\n        if (name && contactNumber && address && email) {\r\n            const obj = {\r\n                name: name,\r\n                contactNumber: contactNumber,\r\n                address: address,\r\n                email: email\r\n            };\r\n            // Payment API Call\r\n        }\r\n        else {\r\n            alert('All are mandatory feilds, plz fill them');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleGallery = () => {\r\n        this.setState({ galleryModalIsOpen: true });\r\n    }\r\n\r\n    handleLocation = () => {\r\n        this.setState({ locationModalIsOpen: true });\r\n    }\r\n\r\n\r\n\r\n    isDate(val) {\r\n        // Cross realm comptatible\r\n        return Object.prototype.toString.call(val) === '[object Date]'\r\n    }\r\n\r\n    isObj = (val) => {\r\n        return typeof val === 'object'\r\n    }\r\n\r\n    stringifyValue = (val) => {\r\n        if (this.isObj(val) && !this.isDate(val)) {\r\n            return JSON.stringify(val)\r\n        } else {\r\n            return val\r\n        }\r\n    }\r\n\r\n    buildForm = ({ action, params }) => {\r\n        const form = document.createElement('form')\r\n        form.setAttribute('method', 'post')\r\n        form.setAttribute('action', action)\r\n\r\n        Object.keys(params).forEach(key => {\r\n            const input = document.createElement('input')\r\n            input.setAttribute('type', 'hidden')\r\n            input.setAttribute('name', key)\r\n            input.setAttribute('value', this.stringifyValue(params[key]))\r\n            form.appendChild(input)\r\n        })\r\n\r\n        return form\r\n    }\r\n\r\n    post = (details) => {\r\n        const form = this.buildForm(details)\r\n        document.body.appendChild(form)\r\n        form.submit()\r\n        form.remove()\r\n    }\r\n\r\n    getData = (data) => {\r\n\r\n        return fetch(`http://localhost:8900/payment`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => response.json()).catch(err => console.log(err))\r\n    }\r\n\r\n    makePayment = (e) => {\r\n\r\n        const { subTotal, name, contactNumber, address, email,userselectitem } = this.state;\r\n        console.log(userselectitem.map(item=>item),subTotal,name,contactNumber,address,email);\r\n\r\n\r\n        if (name && contactNumber && address && email) {\r\n            this.getData({ amount: subTotal, email: email, number: contactNumber, postaddress: address ,orderdetails:userselectitem}).then(response => {\r\n                console.log(response);\r\n                var information = {\r\n                    action: \"https://securegw-stage.paytm.in/order/process\",\r\n                    params: response\r\n                }\r\n                this.post(information);\r\n            })\r\n        }\r\n        else {\r\n            alert('All are mandatory feilds, plz fill them');\r\n        }\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n   \r\n\r\n\r\n    render() {\r\n        const { restaurants, itemModalIsOpen, formModalIsOpen, name, contactNumber, address, email, galleryModalIsOpen, handlecartopen, addcartitem, locationModalIsOpen } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"rectangle\">\r\n                    <img src={`../${restaurants.image}`} width=\"100%\" height=\"400px\" />\r\n\r\n                    <div className=\"clickbuttongallery\">\r\n                        <button className=\"buttoncolor\" onClick={this.handleGallery}>Click to see Image Gallery</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"contaniner-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                            <h2 className=\"title1\"><b>The Big Chill Cakery</b></h2>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                            <div className=\"nbar\">\r\n                                <ul className=\"nav\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link  Overview  lview\" data-toggle=\"tab\" href=\"#home\">Overview</a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link Overview\" data-toggle=\"tab\" href=\"#menu1\">Contact</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div id=\"home\" className=\"container tab-pane active\">\r\n                                        <div className=\"title2\"><b>About this Place</b></div>\r\n                                        <div className=\"title3\">Cuisine</div>\r\n                                        <span className=\"title4\">{restaurants.cuisine ? restaurants.cuisine.map((item) => item.name + ' ,') : null}</span>\r\n                                        <div className=\"title5\">Average Cost</div>\r\n                                        <div className=\"title6\">&#8377; <span>{restaurants.min_price}</span></div>\r\n                                        <div className=\"title7\">Rating : <Rating {...this.props} initialRating={Number(restaurants.aggregate_rating)}\r\n                                            readonly /></div>\r\n                    \r\n                                    </div>\r\n\r\n                                    <div id=\"menu1\" className=\"container tab-pane fade\">\r\n                                        <div className=\"sub_title1\"><b>Contanct Information</b></div>\r\n                                        <div className=\"sub_title2\">Name:{restaurants.name}</div>\r\n                                        <div className=\"sub_title3\">Mobi:{restaurants.contact_number}</div>\r\n                                        <div className=\"sub_title4\">Address:{restaurants.address}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"placeorderbuttonbox\" >\r\n                            <button className=\"Place-Online-Order\" onClick={this.handleOrder}>Place Online Order</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal open={itemModalIsOpen} onClose={() => this.handleModalClose('itemModalIsOpen')} center\r\n\r\n                    classNames={{\r\n                        overlayAnimationIn: 'customEnterOverlayAnimation',\r\n                        overlayAnimationOut: 'customLeaveOverlayAnimation',\r\n                        modalAnimationIn: 'customEnterModalAnimation',\r\n                        modalAnimationOut: 'customLeaveModalAnimation',\r\n                    }}\r\n                    animationDuration={800}\r\n\r\n\r\n                >\r\n\r\n                    <div className=\"item-model-select\">\r\n                        <div className=\"The-Big-Chill-Cakery\">{restaurants.name}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"container-fluid\">\r\n                            {restaurants.itemList ? restaurants.itemList.map((item, index) => {\r\n                                return <div className=\"row\">\r\n\r\n                                    <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                                        <div>\r\n                                            Name: {item.name}\r\n                                        </div>\r\n                                        <div>\r\n                                            Price:{item.rate}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button className=\"btn btn-danger btn-sm\" onClick={() => this.handlecart(index)}><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>Add to Cart</button>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                                        <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\"> <img className=\"card-img-center title-img\" src={`../${item.image}`} style={{ height: '75px', width: '75px', 'border-radius': '20px' }} />\r\n                                            {item.qty == 0 ? <div><button className=\"add-button\" onClick={() => this.addItems(index, 'add')}>Add</button></div> : <div className=\"add-number\"><button onClick={() => this.addItems(index, 'subtract')} className=\"btn-primary\">-</button><span style={{ backgroundColor: 'white' }}>{item.qty}</span><button onClick={() => this.addItems(index, 'add')} className=\"btn-primary\">+</button></div>\r\n                                            }\r\n                                        </div>\r\n                                        <br />\r\n                                        <hr />\r\n\r\n                                    </div>\r\n                                    <br />\r\n                                    <hr />\r\n                                </div>\r\n\r\n                            }) : null}\r\n\r\n                        </div>\r\n                        <div className=\"Rectangle-3352\">\r\n                            <div>\r\n                                <span className=\"Subtotal\">SubTotal:  {this.state.subTotal}</span>\r\n                                <span className=\"btn btn-danger btn-lg Paynow\" onClick={() => this.handlePay()} >Pay Now</span>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </Modal>\r\n                <Modal open={formModalIsOpen} onClose={() => this.handleModalClose('formModalIsOpen')} center\r\n\r\n                    classNames={{\r\n                        overlayAnimationIn: 'customEnterOverlayAnimation',\r\n                        overlayAnimationOut: 'customLeaveOverlayAnimation',\r\n                        modalAnimationIn: 'customEnterModalAnimation',\r\n                        modalAnimationOut: 'customLeaveModalAnimation',\r\n                    }}\r\n                    animationDuration={800}\r\n                >\r\n\r\n                    <div className=\"Web-1920-28 \">\r\n\r\n\r\n                        <form onSubmit={this.makePayment}>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleFormControlInput1\">Name</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Akash\" value={name} onChange={(event) => this.handleChange(event, 'name')} />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleFormControlInput2\">Email address</label>\r\n                                <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput2\" placeholder=\"name@example.com\" value={email} onChange={(event) => this.handleChange(event, 'email')} />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleFormControlInput3\">Conatct Number</label>\r\n                                <input type=\"number\" class=\"form-control\" id=\"exampleFormControlInput3\" value={contactNumber} onChange={(event) => this.handleChange(event, 'contactNumber')} />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleFormControlTextarea1\">Address</label>\r\n                                <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" value={address} onChange={(event) => this.handleChange(event, 'address')}></textarea>\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-danger\" value=\"Proceed\" />\r\n\r\n                        </form>\r\n\r\n\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={galleryModalIsOpen} onClose={() => this.handleModalClose('galleryModalIsOpen')} center\r\n\r\n                    classNames={{\r\n                        overlayAnimationIn: 'customEnterOverlayAnimation',\r\n                        overlayAnimationOut: 'customLeaveOverlayAnimation',\r\n                        modalAnimationIn: 'customEnterModalAnimation',\r\n                        modalAnimationOut: 'customLeaveModalAnimation',\r\n                    }}\r\n                    animationDuration={800}\r\n                >\r\n                    <div>\r\n\r\n                        <Carousel\r\n                            showIndicators={false}\r\n                            showThumbs={false}\r\n                        >\r\n                            {restaurants ? restaurants.thumb && restaurants.thumb.map((item) => {\r\n                                return <div>\r\n                                    <img src={`../${item}`} />\r\n                                </div>\r\n                            }) : null}\r\n                        </Carousel>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </Modal>\r\n\r\n\r\n                <Modal open={handlecartopen} onClose={() => this.handleModalClose('handlecartopen')} center\r\n\r\n                    classNames={{\r\n                        overlayAnimationIn: 'customEnterOverlayAnimation',\r\n                        overlayAnimationOut: 'customLeaveOverlayAnimation',\r\n                        modalAnimationIn: 'customEnterModalAnimation',\r\n                        modalAnimationOut: 'customLeaveModalAnimation',\r\n                    }}\r\n                    animationDuration={800}\r\n\r\n\r\n                >\r\n                    <div className=\"cart-manage\">\r\n                        <div className=\"container-fluid cart-item-mange\" >\r\n                            <h3 className=\"text-center font-weight-bold text-info\">Cart-Management</h3>\r\n                            {addcartitem.length > 0 ? addcartitem.map((item, index) => {\r\n                                return <div className=\"row\">\r\n\r\n                                    <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                                        <div>\r\n                                            Name: {item.name}\r\n                                        </div>\r\n                                        <div>\r\n                                            Price:{item.rate}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button className=\"btn btn-danger btn-sm\" onClick={() => this.handleremovecart(index)}><i class=\"fa fa-shopping-basket\" aria-hidden=\"true\"></i>Remove to Cart</button>\r\n                                        </div>\r\n                                        <br />\r\n                                        <div>\r\n                                            <button className=\"btn btn-success btn-sm\" onClick={() => this.handlebuynow()}><i class=\"fa fa-money\" aria-hidden=\"true\"></i>Buy Now</button>\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                                        <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\"> <img className=\"card-img-center title-img\" src={`../${item.image}`} style={{ height: '75px', width: '75px', 'border-radius': '20px' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }) : <div>\r\n\r\n                                    <h1 className=\"text-justify\">No Cart Items Are Presnt</h1></div>}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Modal>\r\n\r\n                <Modal open={locationModalIsOpen} onClose={() => this.handleModalClose('locationModalIsOpen')} center\r\n\r\n                    classNames={{\r\n                        overlayAnimationIn: 'customEnterOverlayAnimation',\r\n                        overlayAnimationOut: 'customLeaveOverlayAnimation',\r\n                        modalAnimationIn: 'customEnterModalAnimation',\r\n                        modalAnimationOut: 'customLeaveModalAnimation',\r\n                    }}\r\n                    animationDuration={800}\r\n\r\n\r\n                >\r\n                    <div className=\"map\">\r\n                       \r\n                    </div>\r\n                </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Details;","E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\Filter.js",["56","57","58","59","60","61","62","63","64","65","66"],"import React from 'react';\r\nimport '../Styles/Filter.css';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport Checkbox from 'rc-checkbox';\r\nimport noitem from '../Assets/no-items.png';\r\n\r\n\r\nclass Filter extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restaurants: [],\r\n            mealTypes: [],\r\n            locations: [],\r\n            pageCount:[],\r\n            cusineId: undefined,\r\n            locationId: undefined,\r\n            mealTypeId: undefined,\r\n            hCost: undefined,\r\n            lCost: undefined,\r\n            sort: 1,\r\n            page: 1,\r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        sessionStorage.clear();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const queryParams = queryString.parse(this.props.location.search);\r\n        const mealType = queryParams.mealtype;\r\n        const location = queryParams.location;\r\n        const cuisine_id = queryParams.cuisine;\r\n        const location_id = queryParams.area;\r\n        const hcost = queryParams.costlessthan;\r\n        const lcost = queryParams.costmorethan;\r\n        const sort = queryParams.sort;\r\n        const page = queryParams.page;\r\n\r\n\r\n\r\n        // Filter API Call \r\n\r\n        const filterObj = {\r\n            locationId: location,\r\n            mealTypeId: mealType\r\n        }\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8900/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        }).then(response => {\r\n            this.setState({ restaurants: response.data.restaurant, locationId: location, mealTypeId: mealType, pageCount: response.data.pageCount})\r\n        }).catch(error => console.log(error))\r\n\r\n\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:8900/location',\r\n            headers: { 'Content-type': 'application/json' }\r\n        }).then(response => {\r\n            this.setState({ locations: response.data.Locations })\r\n        }).catch(error => { console.log(error) })\r\n\r\n\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: `http://localhost:8900/mealType/${mealType}`,\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(response => {\r\n            this.setState({ mealTypes: response.data.mealtypes })\r\n        }).catch(error => console.log(error))\r\n\r\n\r\n    }\r\n\r\n    handleClick = (Id) => {\r\n        this.props.history.push(`/details/?restaurant=${Id}`);\r\n    }\r\n\r\n\r\n    handleSortChange = (sort) => {\r\n        const { mealTypeId, locationId, cusineId, hCost, lCost, page } = this.state;\r\n\r\n\r\n        const filterObj = {\r\n            mealTypeId: mealTypeId,\r\n            cusineId: cusineId,\r\n            locationId: locationId,\r\n            hCost: hCost,\r\n            lCost: lCost,\r\n            sort: sort,\r\n            page: page\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8900/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        }).then(response => {\r\n            this.setState({ restaurants: response.data.restaurant, sort: sort })\r\n        }).catch(error => console.log(error))\r\n\r\n        this.props.history.push(`/filter/?mealtype=${mealTypeId}&cuisine=${cusineId}&area=${locationId}&costlessthan=${hCost}&costmorethan=${lCost}&sort=${sort}&page=${page}`)\r\n\r\n    }\r\n\r\n\r\n    handleCostChange = (lCost, hCost) => {\r\n        const { mealTypeId, locationId, cusineId, page, sort } = this.state;\r\n\r\n\r\n        const filterObj = {\r\n            mealTypeId: mealTypeId,\r\n            cusineId: cusineId,\r\n            locationId: locationId,\r\n            hCost: hCost,\r\n            lCost: lCost,\r\n            sort: sort,\r\n            page: page\r\n        }\r\n\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8900/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        }).then(response => {\r\n            this.setState({ restaurants: response.data.restaurant, lCost: lCost, hCost: hCost })\r\n            console.log(response)\r\n        }).catch(error => console.log(error))\r\n\r\n        this.props.history.push(`/filter/?mealtype=${mealTypeId}&cuisine=${cusineId}&area=${locationId}&costlessthan=${hCost}&costmorethan=${lCost}&sort=${sort}&page=${page}`)\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n       \r\n        const checkedValue = e.target.value;\r\n        \r\n\r\n\r\n    }\r\n    locationhandler = (event) => {\r\n\r\n        const { mealTypeId, cusineId, hCost, lCost, page, sort } = this.state;\r\n        const locationId = event.target.value;\r\n        const filterObj = {\r\n            mealTypeId: mealTypeId,\r\n            cusineId: cusineId,\r\n            locationId: locationId,\r\n            hCost: hCost,\r\n            lCost: lCost,\r\n            sort: sort,\r\n            page: page\r\n        }\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8900/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        }).then(response => {\r\n            this.setState({ restaurants: response.data.restaurant, locationId: locationId })\r\n        }).catch(error => console.log(error))\r\n\r\n        this.props.history.push(`/filter/?mealtype=${mealTypeId}&cuisine=${cusineId}&area=${locationId}&costlessthan=${hCost}&costmorethan=${lCost}&sort=${sort}&page=${page}`)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handlePageChange = (page) => {\r\n        const { mealTypeId, locationId, cusineId, hCost, lCost, sort } = this.state;\r\n\r\n        const filterObj = {\r\n            mealTypeId: mealTypeId,\r\n            cusineId: cusineId,\r\n            locationId: locationId,\r\n            hCost: hCost,\r\n            lCost: lCost,\r\n            sort: sort,\r\n            page: page\r\n        }\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8900/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        }).then(response => {\r\n            this.setState({ restaurants: response.data.restaurant, page: page })\r\n        }).catch(error => console.log(error))\r\n\r\n        this.props.history.push(`/filter/?mealtype=${mealTypeId}&cuisine=${cusineId}&area=${locationId}&costlessthan=${hCost}&costmorethan=${lCost}&sort=${sort}&page=${page}`)\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { restaurants, mealTypes } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div>\r\n                    {mealTypes.map(item  => {\r\n                        return <div id=\"myId\" className=\"heading-filterComp\">{item.name} Places in Delhi</div>\r\n                    })}\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-4 col-md-4 col-lg-4 filter-options\">\r\n                                <span className=\"glyphicon glyphicon-th-list toggle-span\" data-toggle=\"collapse\"\r\n                                    data-target=\"#demo\"></span>\r\n                                <div id=\"demo\" className=\"collapse show\">\r\n                                    <div className=\"filter-heading\">Filters</div>\r\n                                    <div className=\"Select-Location\">Select Location</div>\r\n                                    <select className=\"Rectangle-2236\" onChange={e => this.locationhandler(e)}>\r\n                                        <option value=\"0\">Select</option>\r\n                                        {this.state.locations.map(item => {\r\n                                            return <option value={item.location_id} >{item.name}</option>\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"Cuisine\">Cuisine</div>\r\n                                    <div>\r\n                                        <Checkbox name=\"North_Indian\" value=\"1\" onChange={e => this.handleChange(e)} />\r\n                                        <span className=\"checkbox-items\">North Indian</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Checkbox name=\"South_Indian\" value=\"2\" onChange={e => this.handleChange(e)} />\r\n                                        <span className=\"checkbox-items\">South Indian</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Checkbox name=\"Chineese\" value=\"3\" onChange={e => this.handleChange(e)} />\r\n                                        <span className=\"checkbox-items\">Chineese</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Checkbox name=\"Fast_Food\" value=\"4\" onChange={e => this.handleChange(e)} />\r\n                                        <span className=\"checkbox-items\">Fast Food</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Checkbox name=\"Street_Food\" value=\"5\" onChange={e => this.handleChange(e)} />\r\n                                        <span className=\"checkbox-items\">Street Food</span>\r\n                                    </div>\r\n                                    <div className=\"Cuisine\">Cost For Two</div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 500)} />\r\n                                        < span className=\"checkbox-items\">Less than &#8377; 500</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(500, 1000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 500 to &#8377; 1000</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1000, 1500)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 1000 to &#8377; 1500</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1500, 2000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 1500 to &#8377; 2000</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(2000, 10000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 2000 +</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 10000)} />\r\n                                        <span className=\"checkbox-items\">All</span>\r\n                                    </div>\r\n                                    <div className=\"Cuisine\">Sort</div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"sort\" onChange={() => this.handleSortChange(1)} />\r\n                                        <span className=\"checkbox-items\">Price low to high</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"sort\" onChange={() => this.handleSortChange(-1)} />\r\n                                        <span className=\"checkbox-items\">Price high to low</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                                {restaurants.length > 0 ? restaurants.map((item) => {\r\n                                    return <div className=\"Item\" onClick={() => this.handleClick(item._id)}>\r\n                                        <div className=\"row pl-1\">\r\n                                            <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                                                <img className=\"img\" src={`../${item.image}`} />\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                                                <div className=\"rest-name\">{item.name}</div>\r\n                                                <div className=\"res-location\">{item.locality}</div>\r\n                                                <div className=\"rest-address\">{item.address}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row padding-left\">\r\n                                            <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                                                <span className=\"rest-address\">CUISINES :</span>\r\n\r\n                                                {item.cuisine.map(item => {\r\n                                                    return <span className=\"rest-address\">{`${item.name},`}</span>\r\n                                                })}\r\n\r\n                                                <div className=\"rest-address\">COST FOR TWO : &#8377; {item.min_price} </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }):<div className=\"No-items\">\r\n                                    <img src={noitem} alt=\"page loading\"  className=\"no-img\"/>\r\n                                    <p className=\"no-item-font-color\">Sorry No Items</p>\r\n                                    </div>}\r\n                                <div className=\"pagination\">\r\n                                    <a onClick={() => this.handlePageChange(1)}>&laquo;</a>\r\n                                    {restaurants.length > 0 ? this.state.pageCount.map((currElement,index)=>{\r\n                                        return  <a onClick={() => this.handlePageChange(currElement)}>{currElement}</a>\r\n                                    }):null}\r\n                                    <a onClick={() => this.handlePageChange(this.state.pageCount.length)}>&raquo;</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter;","E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\Wallpaper.js",["67"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../Styles/Wallpaper.css';\r\nimport homeImag from '../Assets/homepageimg.png';\r\n\r\n\r\nclass Wallpaper extends React.Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restaurants: [],\r\n            text: '',\r\n            suggestions: []\r\n        }\r\n    }\r\n\r\n\r\n    collectLocation=(event)=>{\r\n        const L_Id = event.target.value;\r\n        sessionStorage.setItem('locationId',L_Id);\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: `http://localhost:8900/restaurantbyId/${L_Id}`,\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => this.setState({ restaurants: res.data.restaurant }))\r\n            .catch(err => console.log(err))\r\n\r\n            console.log(this.state.restaurants.map(item=>item));\r\n\r\n    }\r\n\r\n\r\n    handleInputChange = (e) => {\r\n        const value = e.target.value;\r\n        const { restaurants } = this.state;\r\n        let suggestions = [];\r\n\r\n        if (value.length > 0) {\r\n            suggestions = restaurants.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            console.log(suggestions.map(item=>item));\r\n        }\r\n        this.setState(() => ({\r\n            suggestions: suggestions,\r\n            text: value\r\n        }))\r\n    }\r\n\r\n    selectedText = (itemObj) => {\r\n        this.setState({\r\n            text: itemObj.name,\r\n            suggestions: [],\r\n        }, () => {\r\n            this.props.history.push(`/details/?restaurant=${itemObj._id}`);\r\n        })\r\n    }\r\n\r\n    renderSuggestions = () => {\r\n        const { suggestions } = this.state;\r\n\r\n        if (suggestions.length === 0) {\r\n            return null;\r\n        }\r\n        return (\r\n            <ul className=\"search-bar-item-show1\" >\r\n                {\r\n                    suggestions.map((item, index) => (<li className=\"search-bar-item-show\" key={index} onClick={() => this.selectedText(item)}>{`${item.name}`}</li>))\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { locations } = this.props;\r\n        const {text}=this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <img src={homeImag} style={{ width: '100%', height: '450px' }} />\r\n                <div>\r\n                    <div className=\"logo2\">\r\n                        <p>e!</p>\r\n                    </div>\r\n                    <div className=\"headings\">\r\n                        Find the best restaurants, cafes, bars\r\n                     </div>\r\n                    <div className=\"locationSelector\">\r\n                        <select className=\"locationDropdown\" onChange={(e)=>this.collectLocation(e)}>\r\n                            <option value=\"0\">Select</option>\r\n                            {locations.map(item => {\r\n                                return <option value={item.location_id}>{item.name}</option>\r\n                            })}\r\n\r\n                        </select>\r\n                        <div id=\"notebooks\">\r\n                        <input id=\"query\" className=\"restaurantsinput\" type=\"text\" placeholder=\"Please Enter Restaurant Name\" value={text} onChange={this.handleInputChange} />\r\n                            {this.renderSuggestions()}\r\n                            </div>\r\n                            <span className=\"glyphicon glyphicon-search search\"></span>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Wallpaper);","E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\QuickSearch.js",[],"E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\QuickSearchItem.js",["68","69"],"import React from 'react';\r\nimport '../Styles/QuickSearch.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass QuickSearchItem extends React.Component {\r\n\r\n\r\n    handleClick = (Id) => {\r\n        const locationId = sessionStorage.getItem('locationId');\r\n        if(locationId){\r\n            this.props.history.push(`/filter/?mealtype=${Id}&location=${locationId}`);\r\n        }else{\r\n            this.props.history.push(`/filter/?mealtype=${Id}`);\r\n\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        const { id, name, content, image} = this.props;\r\n       \r\n        return (\r\n            <div class=\"col-sm-12 col-md-12 col-lg-4\" onClick={() => this.handleClick(id)}>\r\n                <div class=\"tileContainer\">\r\n                    <div class=\"tileComponent1\">\r\n                        <img src={`../${image}`} height=\"150\" width=\"140\" />\r\n                    </div>\r\n                    <div class=\"tileComponent2\">\r\n                        <div class=\"componentHeading\">\r\n                            {name}\r\n                        </div>\r\n                        <div class=\"componentSubHeading\">\r\n                            {content}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(QuickSearchItem);",["70","71"],"E:\\Edurek Intership\\React Js\\zomto-clone\\src\\Components\\Navbar.js",["72","73","74","75","76","77"],"import React from 'react';\r\nimport '../Styles/Navbar.css';\r\nimport { withRouter } from 'react-router';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport GoogleLogin from 'react-google-login';\r\nimport axios from 'axios';\r\n\r\n\r\nclass NavBar extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loginModalIsOpen: false,\r\n            loggedInUser: undefined,\r\n            signModalIsOpen: false,\r\n            email: '',\r\n            password: '',\r\n            user: [],\r\n            message: undefined,\r\n            registerModalIsOpen: false,\r\n            profileimageUrl:undefined\r\n           \r\n        }\r\n    }\r\n    handlelogo = () => {\r\n        this.props.history.push(\"/\");\r\n\r\n    }\r\n    handleModalClose = (state) => {\r\n        this.setState({ [state]: false });\r\n    }\r\n\r\n    handlelogin(event) {\r\n        this.setState({ loginModalIsOpen: true });\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    responseGoogle = (response) => {\r\n        this.setState({ loggedInUser: response.profileObj.name, loginModalIsOpen: false,profileimageUrl:response.profileObj.imageUrl })\r\n    }\r\n    handleLogout = () => {\r\n        this.setState({ loggedInUser: undefined })\r\n    }\r\n\r\n    handleLogout1 = () => {\r\n        this.setState({ user: [] })\r\n    }\r\n\r\n\r\n\r\n\r\n    handlesign() {\r\n        this.setState({ signModalIsOpen: true });\r\n\r\n    }\r\n\r\n\r\n    handleChange = (event, state) => {\r\n        this.setState({ [state]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        const { email, password } = this.state;\r\n\r\n        if (email && password) {\r\n            var email1 = email;\r\n            const obj = {\r\n                email: email,\r\n                password: password.toString()\r\n            }\r\n            // Payment API Call\r\n\r\n            axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:8900/login',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                data: obj\r\n            }).then(response => {\r\n                console.log(response)\r\n                var mess1 = response.data.message;\r\n                if (mess1.toString() == \"Sign in Succesfully\") {\r\n                    var email2 = response.data.user.map(item => item.email);\r\n\r\n                } else {\r\n                    alert(\"plz check your userid and password\");\r\n                }\r\n\r\n\r\n                if (email2.toString() === email1.toString()) {\r\n                    this.setState({ user: response.data.user, signModalIsOpen: false, loginModalIsOpen: false, message: response.data.message })\r\n\r\n                }\r\n\r\n\r\n            }).catch(error => console.log(error))\r\n\r\n        }\r\n        else {\r\n            alert('All are mandatory feilds, plz fill them');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleRegister = () => {\r\n        this.setState({ registerModalIsOpen: true });\r\n\r\n    }\r\n\r\n\r\n    handleSubmit1 = (event) => {\r\n        const { email, password } = this.state;\r\n\r\n        if (email && password) {\r\n            const obj = {\r\n                email: email,\r\n                password: password.toString()\r\n            }\r\n            // Payment API Call\r\n\r\n            axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:8900/register',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                data: obj\r\n            }).then(response => {\r\n                var mess = response.data.meassage;\r\n                console.log(mess.toString())\r\n                if(mess.toString()==='User Register Succesfully'){\r\n                    alert(\"Register Succesfully with email id\"+ \" : \"+email);\r\n\r\n                }else{\r\n                    alert(\"this  email id is alredy register plz go and login directly \");\r\n\r\n                }\r\n\r\n\r\n\r\n            }).catch(error => console.log(error))\r\n\r\n        }\r\n        else {\r\n            alert('All are mandatory feilds, plz fill them');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { loginModalIsOpen, loggedInUser, signModalIsOpen, email, password, user, registerModalIsOpen,profileimageUrl} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <div class=\"topbar\">\r\n                    <div class=\"logo\" onClick={() => this.handlelogo()}>\r\n                        <b >e!</b>\r\n                    </div>\r\n                    <div class=\"hlogin\">\r\n\r\n\r\n                        {loggedInUser  ? <div className=\"Login1\">{loggedInUser}\r\n                        <img className=\"rounded-circle mt-5 n-imag\" src={profileimageUrl} width=\"35\"  />\r\n                            <div className=\"Login2\" onClick={this.handleLogout}>LogOut</div></div> :\r\n                            <a className=\"Login\" onClick={(e) => this.handlelogin(e)}>Login</a>}\r\n\r\n                        {user.length != 0 ? <div className=\"Login1\">{user.map(item => item.email)}\r\n                            <div className=\"Login3\" onClick={this.handleLogout1}>LogOut</div></div> :\r\n                            null}\r\n\r\n\r\n\r\n                        {loggedInUser || user.length > 0 ? <div></div> : <a class=\"Register\" onClick={() => this.handleRegister()}>Register</a>}\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <Modal open={loginModalIsOpen} onClose={() => this.handleModalClose('loginModalIsOpen')} center\r\n\r\n                    classNames={{\r\n                        overlayAnimationIn: 'customEnterOverlayAnimation',\r\n                        overlayAnimationOut: 'customLeaveOverlayAnimation',\r\n                        modalAnimationIn: 'customEnterModalAnimation',\r\n                        modalAnimationOut: 'customLeaveModalAnimation',\r\n                    }}\r\n                    animationDuration={800}\r\n                >\r\n\r\n\r\n                    <div className=\"Rectangle-3338\">\r\n\r\n                        <div>\r\n                            <h2 className=\"Login-top-pop\">\r\n                                Login\r\n                            </h2>\r\n                        </div>\r\n\r\n                        <div className=\"Signinbutton-Setup\">\r\n\r\n                            <GoogleLogin\r\n                                clientId=\"36357988154-fpdeduqtpls3tqvqq89oad55nnvbhhgj.apps.googleusercontent.com\"\r\n                                buttonText=\"Google-login Button\"\r\n                                onSuccess={this.responseGoogle}\r\n                                className=\"button-google\"\r\n\r\n\r\n\r\n                            />\r\n\r\n                            <div className=\"Signinbutton-Setup1\">\r\n\r\n                                <button className=\"btn btn-outline-dark btn-lg button-google1 \" onClick={() => this.handlesign()}>Login</button>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Modal>\r\n\r\n\r\n                <Modal open={signModalIsOpen} onClose={() => this.handleModalClose('signModalIsOpen')} center\r\n\r\n                    classNames={{\r\n                        overlayAnimationIn: 'customEnterOverlayAnimation',\r\n                        overlayAnimationOut: 'customLeaveOverlayAnimation',\r\n                        modalAnimationIn: 'customEnterModalAnimation',\r\n                        modalAnimationOut: 'customLeaveModalAnimation',\r\n                    }}\r\n                    animationDuration={800}\r\n                >\r\n\r\n                    <div className=\"Web-1920-29 \">\r\n\r\n\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleFormControlInput2\">Email address</label>\r\n                                <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput2\" placeholder=\"name@example.com\" value={email} onChange={(event) => this.handleChange(event, 'email')} />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleFormControlInput3\">password</label>\r\n                                <input type=\"password\" class=\"form-control\" id=\"exampleFormControlInput3\" min=\"1\" max=\"10\" value={password} onChange={(event) => this.handleChange(event, 'password')} />\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-danger  btn-lg\" value=\"Login\" />\r\n\r\n                        </form>\r\n\r\n\r\n                    </div>\r\n                </Modal>\r\n\r\n\r\n\r\n                <Modal open={registerModalIsOpen} onClose={() => this.handleModalClose('registerModalIsOpen')} center\r\n\r\n                    classNames={{\r\n                        overlayAnimationIn: 'customEnterOverlayAnimation',\r\n                        overlayAnimationOut: 'customLeaveOverlayAnimation',\r\n                        modalAnimationIn: 'customEnterModalAnimation',\r\n                        modalAnimationOut: 'customLeaveModalAnimation',\r\n                    }}\r\n                    animationDuration={800}\r\n                >\r\n\r\n                    <div>\r\n                        <h2 className=\"Login-top-pop\">\r\n                            Register\r\n                            </h2>\r\n                    </div>\r\n\r\n                    <div className=\"Web-1920-29 \">\r\n                        <form onSubmit={this.handleSubmit1}>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleFormControlInput2\">Email address</label>\r\n                                <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput2\" placeholder=\"name@example.com\" value={email} onChange={(event) => this.handleChange(event, 'email')} />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleFormControlInput3\">password</label>\r\n                                <input type=\"password\" class=\"form-control\" id=\"exampleFormControlInput3\" min=\"1\" max=\"10\" value={password} onChange={(event) => this.handleChange(event, 'password')} />\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-danger  btn-lg\" value=\"Register\" />\r\n\r\n                        </form>\r\n                    \r\n            \r\n        \r\n\r\n\r\n                    </div>\r\n                </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NavBar);",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":101,"column":27,"nodeType":"88","messageId":"89","endLine":101,"endColumn":29},{"ruleId":"90","severity":1,"message":"91","line":109,"column":26,"nodeType":"92","messageId":"93","endLine":109,"endColumn":28},{"ruleId":"82","severity":1,"message":"94","line":151,"column":19,"nodeType":"84","messageId":"85","endLine":151,"endColumn":22},{"ruleId":"95","severity":1,"message":"96","line":260,"column":21,"nodeType":"97","endLine":260,"endColumn":88},{"ruleId":"95","severity":1,"message":"96","line":347,"column":95,"nodeType":"97","endLine":347,"endColumn":232},{"ruleId":"86","severity":1,"message":"87","line":348,"column":55,"nodeType":"88","messageId":"89","endLine":348,"endColumn":57},{"ruleId":"95","severity":1,"message":"96","line":432,"column":37,"nodeType":"97","endLine":432,"endColumn":63},{"ruleId":"95","severity":1,"message":"96","line":484,"column":95,"nodeType":"97","endLine":484,"endColumn":232},{"ruleId":"82","severity":1,"message":"98","line":37,"column":15,"nodeType":"84","messageId":"85","endLine":37,"endColumn":25},{"ruleId":"82","severity":1,"message":"99","line":38,"column":15,"nodeType":"84","messageId":"85","endLine":38,"endColumn":26},{"ruleId":"82","severity":1,"message":"100","line":39,"column":15,"nodeType":"84","messageId":"85","endLine":39,"endColumn":20},{"ruleId":"82","severity":1,"message":"101","line":40,"column":15,"nodeType":"84","messageId":"85","endLine":40,"endColumn":20},{"ruleId":"82","severity":1,"message":"102","line":41,"column":15,"nodeType":"84","messageId":"85","endLine":41,"endColumn":19},{"ruleId":"82","severity":1,"message":"103","line":42,"column":15,"nodeType":"84","messageId":"85","endLine":42,"endColumn":19},{"ruleId":"82","severity":1,"message":"104","line":154,"column":15,"nodeType":"84","messageId":"85","endLine":154,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":302,"column":49,"nodeType":"97","endLine":302,"endColumn":97},{"ruleId":"105","severity":1,"message":"106","line":328,"column":37,"nodeType":"97","endLine":328,"endColumn":81},{"ruleId":"105","severity":1,"message":"106","line":330,"column":49,"nodeType":"97","endLine":330,"endColumn":103},{"ruleId":"105","severity":1,"message":"106","line":332,"column":37,"nodeType":"97","endLine":332,"endColumn":107},{"ruleId":"95","severity":1,"message":"96","line":83,"column":17,"nodeType":"97","endLine":83,"endColumn":82},{"ruleId":"82","severity":1,"message":"107","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":13},{"ruleId":"95","severity":1,"message":"96","line":26,"column":25,"nodeType":"97","endLine":26,"endColumn":77},{"ruleId":"78","replacedBy":"108"},{"ruleId":"80","replacedBy":"109"},{"ruleId":"86","severity":1,"message":"87","line":88,"column":38,"nodeType":"88","messageId":"89","endLine":88,"endColumn":40},{"ruleId":"110","severity":1,"message":"111","line":136,"column":63,"nodeType":"88","messageId":"112","endLine":136,"endColumn":64},{"ruleId":"95","severity":1,"message":"96","line":180,"column":25,"nodeType":"97","endLine":180,"endColumn":105},{"ruleId":"105","severity":1,"message":"106","line":182,"column":29,"nodeType":"97","endLine":182,"endColumn":87},{"ruleId":"86","severity":1,"message":"113","line":184,"column":38,"nodeType":"88","messageId":"89","endLine":184,"endColumn":40},{"ruleId":"105","severity":1,"message":"106","line":190,"column":74,"nodeType":"97","endLine":190,"endColumn":132},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'obj' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'cuisine_id' is assigned a value but never used.","'location_id' is assigned a value but never used.","'hcost' is assigned a value but never used.","'lcost' is assigned a value but never used.","'sort' is assigned a value but never used.","'page' is assigned a value but never used.","'checkedValue' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'axios' is defined but never used.",["114"],["115"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]